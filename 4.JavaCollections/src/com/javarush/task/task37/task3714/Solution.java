package com.javarush.task.task37.task3714;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;/* Древний Рим*/public class Solution {    public static void main(String[] args) throws IOException {        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));        System.out.println("Input a roman number to be converted to decimal: ");        String romanString = bufferedReader.readLine();        System.out.println("Conversion result equals " + romanToInteger(romanString));    }    public static int romanToInteger(String s) {        char [] letter = s.toCharArray();        int [] numbers = new int[letter.length];        int result;        for(int i = 0; i < numbers.length; i++) {            numbers[i] = letterToNumber(letter[i]);        }        result = numbers[numbers.length-1];        for(int i = numbers.length -1; i>0; i--) {                numbers[i-1] = numbers[i-1] < numbers[i] ? -Math.abs(numbers[i-1]) : Math.abs(numbers[i-1]);                result += numbers[i-1];        }        return result;    }    private static int letterToNumber(char letter){        switch (letter) {            case 'I':  return 1;            case 'V':  return 5;            case 'X':  return 10;            case 'L':  return 50;            case 'C':  return 100;            case 'D':  return 500;            case 'M':  return 1000;            default:   return -1;        }    }}/*Древний РимАмиго, привет! Я недавно увлекся историей вашей планеты и меня заинтересовал период Древнего Рима.Интересно тогда было жить, сплошные развлечения и вино! Или рабство, если не повезло со стартовой локацией...В общем, мне нужен метод romanToInteger, который будет конвертировать число в римской системе счисления {I, V, X, L, C, D, M} в десятичную.Иначе никак не разобрать что и когда у них происходило.Требования:1. Метод romanToInteger должен конвертировать число в римской системе счисления в десятичную.2. Метод romanToInteger должен возвращать значение типа int и принимать один параметр типа String.3. Метод romanToInteger должен быть публичным.4. Метод romanToInteger должен быть статическим. *//*    public static int romanToInteger(String s) {        char [] letter = s.toCharArray();        for(char f : letter)System.out.print(f);        System.out.println("\n");        int [] numbers = new int[letter.length];        int result = 0;        for(int i = letter.length-1; i >= 0; i--) {            numbers[letter.length-1-i] = letterToNumber(letter[i]);        }        for(int i= 0; i < numbers.length; i++){            System.out.print(" ["+i+"] = "+numbers[i]);                     // <-        }        System.out.println("");        for(int i = 0; i < numbers.length -1; i++) {                numbers[i+1] = numbers[i+1] < numbers[i] ? -numbers[i+1] : numbers[i+1];        }        System.out.println();        for(int i= 0; i < numbers.length; i++){            System.out.print(" ["+i+"] = "+numbers[i]);                     // <- <-        }        System.out.println("");       numbers[numbers.length-1] = numbers[numbers.length-1] < numbers[numbers.length-2] ?        - Math.abs(numbers[numbers.length-1]) : Math.abs(numbers[numbers.length-1]);        for(int i = 0; i < numbers.length; i++) {           result += numbers[i];            System.out.print(numbers[i]+" ");        }        return result;    } */